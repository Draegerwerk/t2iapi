/*
This Source Code Form is subject to the terms of the MIT License.
Copyright (c) 2022 Draegerwerk AG & Co. KGaA.

SPDX-License-Identifier: MIT
*/

syntax = "proto3";

package t2iapi.alert;

import "t2iapi/alert/types.proto";

option java_package = "com.draeger.medical.t2iapi.alert";
option java_outer_classname = "AlertRequests";

// module for alert requests


/*
This message is used as a request to transition the AlertConditionState/@Presence to the requested value for the
given AlertCondition handle.
 */
message SetAlertConditionPresenceRequest {
    string handle = 1;  // handle of the alert condition state for which the presence shall be set
    bool presence = 2;  // alert condition presence to be transitioned to
}

/*
This message is used as a request to set AlertSignalState/@Presence.
 */
message SetAlertSignalPresenceRequest {
  string handle = 1;  // handle reference of the alert signal
  AlertSignalPresence presence = 2;  // alert signal presence to set
}

/*
Request to set the pm:AlertSignalState/@Presence either for all provided alert signals or only for a subset of the
provided alert signals to the provided @Presence. If more than one @Presence value is provided, all manipulated alert
signals shall have their @Presence randomly set to all values provided by the parameter "presence". The minimal
amount of alert signals to have their @Presence manipulated shall be at least as big as the the size defined by the
parameter "min_subset_size".
 */
message SetSomeAlertSignalPresenceRequest {
  repeated string handle = 1;                 // a list of alert signal handles for which @Presence shall be manipulated
  string min_subset_size = 2;                 // the minimal number of alert signals to have their @Presence manipulated
  repeated AlertSignalPresence presence = 3;  // a list of @Presence values to be randomly set to alert signals

}

/*
This message is used as a request to enable or disable the AlertSignalInactivationState represented by an
AlertCondition. The AlertCondition is used to identify the AlertSignalInactivationState as there is no other way
to do so, because it is not directly modelled in the MDIB.
 */
message SetAlarmSignalInactivationStateRequest{
    string handle = 1;  // handle reference of the alert condition
    AlarmSignalInactivationState enable = 2;
}

/*
Request for a given alert condition to start/stop escalation/deescalation action from one alert priority to another.
The alert priority can be set to Low, Medium, High or None.
 */
message AlertConditionEscalationRequest {
  string handle = 1;
  AlertConditionEscalationProcess escalation_process = 2;
}


