/*
This Source Code Form is subject to the terms of the MIT License.
Copyright (c) 2022 Draegerwerk AG & Co. KGaA.

SPDX-License-Identifier: MIT
*/

syntax = "proto3";

package t2iapi.activation_state;

import "t2iapi/basic_responses.proto";
import "t2iapi/activation_state/activation_state_requests.proto";

option java_package = "com.draeger.medical.t2iapi.activation_state";
option java_outer_classname = "ActivationStateApiService";


/*
Service to handle activation manipulations.
 */
service ActivationStateService {

  /*
  Set the ActivationState of the Alert with the given handle to the given AlertActivation value.
   */
  rpc SetAlertActivation (t2iapi.activation_state.SetAlertActivationRequest)
      returns (BasicResponse);

  /*
  Set the ActivationState of the DeviceComponent or Metric
  with the given handle to the given ComponentActivation value.
   */
  rpc SetComponentActivation (t2iapi.activation_state.SetComponentActivationRequest)
      returns (BasicResponse);

  /*
 Ensure that the requested transition of the value of the ActivationState of the DeviceComponent or Metric with the given handle from the starting ActivationState value, given as "start_activation" in the request, to the final ActivationState value, given as "end_activation" in the request, happens during the remote procedure call.
 
   */
  rpc ComponentActivationTransition (t2iapi.activation_state.ComponentActivationTransitionRequest)
      returns (BasicResponse);

  /*
  Set a SystemSignalActivation for a alert system with the given handle.
   */
  rpc SetSystemSignalActivation (t2iapi.activation_state.SetSystemSignalActivationRequest)
      returns (BasicResponse);
}

